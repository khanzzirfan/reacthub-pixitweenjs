{"version":3,"file":"PixiSeqenceWrapper-a5cc775b.js","sources":["../../src/components/PixiSequence/PixiSequence.tsx","../../src/components/PixiSequence/PixiSeqenceWrapper.tsx"],"sourcesContent":["import * as React from \"react\";\nimport { useRef, useContext } from \"react\";\nimport { Container } from \"@pixi/react\";\nimport gsap from \"gsap\";\nimport * as PIXI from \"pixi.js\";\nimport { GsapPixieContext } from \"../../providers/GsapPixieContextProvider\";\n\n// delcare props for timeline\nexport interface PixiSequenceProps {\n  children: React.ReactNode;\n  /** start time of the sequence in seconds */\n  startAt: number;\n  /** end time of the sequence in seconds */\n  endAt: number;\n  /** unique id */\n  uniqueId?: string;\n}\n\nexport const PixiSequence = (props: PixiSequenceProps) => {\n  const { startAt, endAt, uniqueId } = props;\n  //// Refs\n  const containerRef = useRef<PIXI.Container>(null);\n  const childRef = useRef<PIXI.Container>(null);\n  const dataRef = useRef<PIXI.Container>(null);\n  const dataTweenRef = useRef<gsap.core.Tween>(null);\n\n  //// Context\n  const { tl, totalDuration = 0 } = useContext(GsapPixieContext);\n\n  // reset timeline when reverse mode end.\n  React.useEffect(() => {\n    const ctx = gsap.context(() => {\n      if (containerRef.current && tl.current) {\n        // kill tween before adding it.\n        if (dataTweenRef.current) {\n          dataTweenRef.current.kill();\n          tl.current.remove(dataTweenRef.current);\n        }\n\n        const initialAlpha = startAt < 0.2 ? 1 : 0;\n        // @ts-ignore\n        dataTweenRef.current = gsap\n          .timeline()\n          .set(containerRef.current, { alpha: initialAlpha })\n          .to(containerRef.current, {\n            pixi: {\n              alpha: 1,\n              eventMode: \"static\",\n            },\n            duration: Number(endAt) - Number(startAt),\n          })\n          .set(containerRef.current, { alpha: 0, eventMode: \"none\" });\n        // add tween\n        tl.current.add([dataTweenRef.current], startAt);\n      }\n    });\n    return () => {\n      if (dataTweenRef.current) {\n        tl.current.remove(dataTweenRef.current);\n        dataTweenRef.current.progress(0).kill();\n      }\n      ctx.revert();\n    };\n  }, [startAt, endAt, totalDuration, uniqueId]);\n\n  return (\n    <Container\n      ref={containerRef}\n      alpha={startAt < 0.2 ? 1 : 0} //@ts-ignore\n      eventMode={startAt < 0.2 ? \"static\" : \"none\"}\n    >\n      <Container ref={dataRef}>\n        <Container ref={childRef} alpha={1}>\n          {props.children}\n        </Container>\n      </Container>\n    </Container>\n  );\n};\n","import * as React from \"react\";\r\nimport { useContext } from \"react\";\r\nimport { GsapPixieContext } from \"../../providers/GsapPixieContextProvider\";\r\n\r\n// delcare props for timeline\r\nexport interface PixiSequenceWrapperProps {\r\n  children: React.ReactNode;\r\n  /** start time of the total sequence in seconds */\r\n  startAt: number;\r\n  /** end time of the last sequence in seconds. It is end of global timeline seconds */\r\n  endAt: number;\r\n}\r\n\r\nexport const PixiSequenceWrapper = (props: PixiSequenceWrapperProps) => {\r\n  const { startAt, endAt } = props;\r\n  //// Context\r\n  const { setTotalDuration } = useContext(GsapPixieContext);\r\n  React.useEffect(() => {\r\n    if (setTotalDuration) {\r\n      // add some buffer to the end\r\n      setTotalDuration(Number(endAt) + 0.2);\r\n    }\r\n  }, [startAt, endAt]);\r\n\r\n  return props.children;\r\n};\r\n"],"names":["PixiSequence","props","startAt","endAt","uniqueId","containerRef","useRef","childRef","dataRef","dataTweenRef","tl","totalDuration","useContext","GsapPixieContext","React.useEffect","ctx","gsap","initialAlpha","jsx","Container","PixiSequenceWrapper","setTotalDuration"],"mappings":"gJAkBO,MAAAA,EAAAC,GAAA,CACL,KAAA,CAAA,QAAAC,EAAA,MAAAC,EAAA,SAAAC,CAAA,EAAAH,EAEAI,EAAAC,SAAA,IAAA,EACAC,EAAAD,SAAA,IAAA,EACAE,EAAAF,SAAA,IAAA,EACAG,EAAAH,SAAA,IAAA,EAGA,CAAA,GAAAI,EAAA,cAAAC,EAAA,CAAA,EAAAC,EAAAA,WAAAC,CAAA,EAGAC,OAAAA,EAAAA,UAAA,IAAA,CACE,MAAAC,EAAAC,EAAA,QAAA,IAAA,CACE,GAAAX,EAAA,SAAAK,EAAA,QAAA,CAEED,EAAA,UACEA,EAAA,QAAA,OACAC,EAAA,QAAA,OAAAD,EAAA,OAAA,GAGF,MAAAQ,EAAAf,EAAA,GAAA,EAAA,EAEAO,EAAA,QAAAO,EAAA,SAAA,EAAA,IAAAX,EAAA,QAAA,CAAA,MAAAY,CAAA,CAAA,EAAA,GAAAZ,EAAA,QAAA,CAG4B,KAAA,CAClB,MAAA,EACG,UAAA,QACI,EACb,SAAA,OAAAF,CAAA,EAAA,OAAAD,CAAA,CACwC,CAAA,EAAA,IAAAG,EAAA,QAAA,CAAA,MAAA,EAAA,UAAA,MAAA,CAAA,EAI5CK,EAAA,QAAA,IAAA,CAAAD,EAAA,OAAA,EAAAP,CAAA,CAA8C,CAChD,CAAA,EAEF,MAAA,IAAA,CACEO,EAAA,UACEC,EAAA,QAAA,OAAAD,EAAA,OAAA,EACAA,EAAA,QAAA,SAAA,CAAA,EAAA,KAAA,GAEFM,EAAA,OAAA,CAAW,CACb,EAAA,CAAAb,EAAAC,EAAAQ,EAAAP,CAAA,CAAA,EAGFc,EAAA,IACEC,EAAA,UAAC,CAAA,IAAAd,EACM,MAAAH,EAAA,GAAA,EAAA,EACsB,UAAAA,EAAA,GAAA,SAAA,OACW,SAAAgB,EAAA,IAAAC,YAAA,CAAA,IAAAX,EAAA,SAAAU,EAAAA,IAAAC,EAAA,UAAA,CAAA,IAAAZ,EAAA,MAAA,EAAA,SAAAN,EAAA,QAAA,CAAA,EAAA,CAMtC,CAAA,CAGN,6cCjEO,MAAAmB,EAAAnB,GAAA,CACL,KAAA,CAAA,QAAAC,EAAA,MAAAC,CAAA,EAAAF,EAEA,CAAA,iBAAAoB,CAAA,EAAAT,EAAA,WAAAC,CAAA,EACAC,OAAAA,EAAAA,UAAA,IAAA,CACEO,GAEEA,EAAA,OAAAlB,CAAA,EAAA,EAAA,CACF,EAAA,CAAAD,EAAAC,CAAA,CAAA,EAGFF,EAAA,QACF"}